#!/bin/bash
set -euo pipefail

fds_path=${INPUT:-}
registry_out=${OUTPUT:-}

while getopts "i:o:" opt
do
  case "$opt" in
    i )
    fds_path=$OPTARG
    ;;
    o )
    registry_out=$OPTARG
    ;;
    \? ) echo >&2 "$0: Usage $0 -i <input file descriptor set> -o <out dir>"
    ;;
  esac
done

if [ -z "$fds_path" ]
then echo >&2 "$0: Missing INPUT/-i"
fi

if [ -z "$registry_out" ]
then echo >&2 "$0: Missing OUTPUT/-o"
fi

fds_path=$(realpath "$fds_path")
registry_out=$(realpath "$registry_out")

cd "$(dirname $0)"

cp "$fds_path" src/schema/schema.pb
export CI=true
# yarn lint
# yarn test
cp /home/node/app/node_modules/react-scripts/config/webpack.config.js /home/node/app/node_modules/react-scripts/config/webpack.config.prod
yarn build

mkdir -p "$registry_out/build"
./api-generator -i src/schema/schema.pb -o "$registry_out/build/static/protobuf/{name}.pb"
cp -r build/. "$registry_out/build/."
cp nginx.conf "$registry_out/nginx.conf"
cp Dockerfile.deploy "$registry_out/Dockerfile"
